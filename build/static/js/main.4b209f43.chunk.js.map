{"version":3,"sources":["components/Weather.js","components/Clock.js","data/quotes.js","App.js","serviceWorker.js","index.js"],"names":["Weather","props","state","icons","temp","rain","time","UNIX_timestamp","hour","Date","getHours","axios","get","then","res","console","log","temps","rains","times","i","data","hourly","icon","temperature","precipProbability","push","Math","round","ceil","timeConverter","setState","catch","err","className","this","alt","src","React","Component","Clock","toLocaleTimeString","minute","daydate","timerID","setInterval","tick","clearInterval","date","myDay","getDay","myDate","getDate","myMonth","getMonth","jsonData","App","quote","quoteAuthor","updateQuote","bind","length","item","floor","random","author","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b209f43.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nexport class Weather extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            //icons: [\"clear-day\", \"cloudy\", \"clear-day\", \"clear-night\", \"cloudy-night\"],\n            //temp: [\"10\", \"10\", \"10\", \"10\", \"10\"],\n            //rain: [\"0.1\", \"0.1\", \"0.1\", \"0.1\", \"0.1\"],\n            //time: [\"9AM\", \"12PM\", \"3PM\", \"6PM\", \"9PM\"]\n            icons: [\"\", \"\", \"\", \"\", \"\"],\n            temp: [\"\", \"\", \"\", \"\", \"\"],\n            rain: [\"\", \"\", \"\", \"\", \"\"],\n            time: [\"\", \"\", \"\", \"\", \"\"]\n        };\n    }\n\n    /*initIcons() {\n        let list = \n        this.setState({\n            icons: list\n        });\n    }*/\n\n    timeConverter(UNIX_timestamp){\n        var a = new Date(UNIX_timestamp * 1000);\n        var hour = a.getHours();\n\n        if (hour > 11) {\n            hour = hour - 12;\n            hour = hour + \" pm\";\n        } else {\n            hour = hour + \" am\"\n        }\n\n        if (hour === \"0 am\") {\n            hour = \"12 am\"\n        }\n\n        return hour;\n    }\n      \n\n    componentDidMount() {\n        //this.initIcons();\n\n        axios.get(`https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/a8deb7086d8b0a4584ce78ecc82c05cc/53.283818,-6.205588?units=si&exclude=minutely,currently,daily,alerts,flags`)\n        .then(res => {\n            console.log(res);\n            \n            let icons = [];\n            let temps = [];\n            let rains = [];\n            let times = []\n            let hourInterval = 3;\n            for (var i = 0; i < 5; ++i) {\n                let hour = i*hourInterval;\n                let data = res.data.hourly.data[hour];\n                let icon = data.icon;\n                let temp = data.temperature;\n                let rain = data.precipProbability;\n                let time = data.time;\n\n                icons.push(icon);\n                temps.push(temp);\n                rains.push(rain);\n                times.push(time);\n            }\n\n            //format values\n            for (i = 0; i < 5; ++i) {\n\n                //temperature\n                let temp = temps[i];\n                temp = Math.round(temp);\n                temps[i] = temp + \"°C\";\n\n                //rain percentage\n                let rain = rains[i];\n                rain = rain * 100;\n                rain = Math.ceil(rain / 10) * 10;\n                rains[i] = rain + \"%\";\n\n                let time = times[i];\n                time = this.timeConverter(time);\n                times[i] = time;\n            }\n\n            this.setState({\n                icons: icons,\n                temp: temps,\n                rain: rains,\n                time: times\n            });\n\n        })\n        .catch(err => {\n            // Something went wrong. Save the error in state and re-render.\n            console.log(err);\n        });\n      }\n\n    render() {\n        return (\n            <div className=\"new-weather\">\n                <ul className=\"info\">\n                    <li></li>\n                    <li>Time</li>\n                    <li>Temp (°C)</li>\n                    <li>Rain (%)</li>\n                </ul>\n                <ul>\n                    <li className=\"time\">{this.state.time[0]}</li>\n                    <li><img className=\"icon\" alt=\"clear-day\" src={\"https://darksky.net/images/weather-icons/\" + this.state.icons[0] + \".png\"}/></li>\n                    <li className=\"temp\">{this.state.temp[0]}</li>\n                    <li className=\"rain\">{this.state.rain[0]}</li>\n                </ul>\n                <ul>\n                    <li className=\"time\">{this.state.time[1]}</li>\n                    <li><img className=\"icon\" alt=\"clear-day\" src={\"https://darksky.net/images/weather-icons/\" + this.state.icons[1] + \".png\"}/></li>\n                    <li className=\"temp\">{this.state.temp[1]}</li>\n                    <li className=\"rain\">{this.state.rain[1]}</li>\n                </ul>\n                <ul>\n                    <li className=\"time\">{this.state.time[2]}</li>\n                    <li><img className=\"icon\" alt=\"clear-day\" src={\"https://darksky.net/images/weather-icons/\" + this.state.icons[2] + \".png\"}/></li>\n                    <li className=\"temp\">{this.state.temp[2]}</li>\n                    <li className=\"rain\">{this.state.rain[2]}</li>\n                </ul>\n                <ul>\n                    <li className=\"time\">{this.state.time[3]}</li>\n                    <li><img className=\"icon\" alt=\"clear-day\" src={\"https://darksky.net/images/weather-icons/\" + this.state.icons[3] + \".png\"}/></li>\n                    <li className=\"temp\">{this.state.temp[3]}</li>\n                    <li className=\"rain\">{this.state.rain[3]}</li>\n                </ul>\n                <ul>\n                    <li className=\"time\">{this.state.time[4]}</li>\n                    <li><img className=\"icon\" alt=\"clear-day\" src={\"https://darksky.net/images/weather-icons/\" + this.state.icons[4] + \".png\"}/></li>\n                    <li className=\"temp\">{this.state.temp[4]}</li>\n                    <li className=\"rain\">{this.state.rain[4]}</li>\n                </ul>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nexport class Clock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {time: new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}),\n                      daydate: ''};\n    }\n\n    componentDidMount() {\n      this.timerID = setInterval(() => this.tick(), 60000); // once a minute\n      this.tick();\n    }\n\n    componentWillUnmount() {\n      clearInterval(this.timerID);\n    }\n\n    tick() {\n      var date = new Date();\n  \n      this.setState({\n        time: date.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})\n      })\n  \n      var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  \n      var myDay = days[date.getDay()];\n      var myDate = date.getDate();\n      var myMonth = months[date.getMonth()];\n  \n      this.setState({\n        daydate: myDay + ' ' + myDate + ' ' + myMonth\n      })\n    }\n\n    render() {\n        return (\n            <div className=\"clock\">\n              <h2>{this.state.time}</h2>\n              <h4>{this.state.daydate}</h4>\n            </div>\n        )\n    }\n}","var jsonData = {data: [\n  {\n    \"quote\" : \"He who has a ‘why’ can live to bear almost any ‘how’\",\n    \"author\" : \"Friedrich Nietzsche\"\n  },\n  {\n    \"quote\": \"“If we do not feel grateful for what we already have, what makes us think we’d be happy with more?”\",\n    \"author\": \"\"\n  },\n  {\n    \"quote\": \"A character is what a character does\",\n    \"author\": \"\"\n  },\n  {\n    \"quote\": \"Act such that if your action became a universal maxim that that would be of universal benefit\",\n    \"author\": \"Immanuel Kant\"\n  },\n  {\n    \"quote\": \"If you don’t prioritise your life, someone else will\",\n    \"author\": \"\"\n  },\n  {\n    \"quote\": \"Spend less time studying your investments and more time studying yourself\",\n    \"author\": \"Jason Zweig\"\n  },\n  {\n    \"quote\": \"In the case of good books, the point is not to see how many of them you can get through, but rather how many can get through to you\",\n    \"author\": \"Mortimer J. Adler\"\n  },\n  {\n    \"quote\": \"What you are afraid to do is a clear indication of the next thing you need to do\",\n    \"author\": \"Ralph Waldo Emerson\"\n  },\n  {\n    \"quote\": \"You all laugh at me because I’m different. I laugh at you because you’re all the same.\",\n    \"author\": \"John Davis\"\n  },\n  {\n    \"quote\": \"In a room full of shouting people, the one who whispers becomes interesting\",\n    \"author\": \"Peter Schmidt\"\n  },\n  {\n    \"quote\": \"What is more mortifying than to feel that you have missed the plum for want of courage to shake the tree?\",\n    \"author\": \"Logan Pearsall Smith\"\n  },\n  {\n    \"quote\": \"The person who doesn't read is no better off than the person who can't read\",\n    \"author\": \"\"\n  },\n  {\n    \"quote\": \"Simplicity is the ultimate sophistication\",\n    \"author\": \"Leonardo DiVinci\"\n  },\n  {\n    \"quote\": \"How would the person I wish to be act today?\",\n    \"author\": \"\"\n  },\n  {\n    \"quote\": \"Human beings are born with different capacities, if they are free, they are not equal. And if they are equal, they are not free\",\n    \"author\": \"Aleksandr Solzhenitsyn\"\n  },\n  {\n    \"quote\": \"todo\",\n    \"author\": \"todo\"\n  },\n  {\n    \"quote\" : \"We must all suffer one of two things, the pain of discipline or the pain of regret\",\n    \"author\" : \"\"\n  },\n  {\n    \"quote\" : \"Action expresses priorities\",\n    \"author\" : \"Mahatma Gandhi\"\n  },\n  {\n    \"quote\" : \"The line dividing good and evil cuts through the heart of every human being\",\n    \"author\" : \"Aleksandr Solzhenitsyn\"\n  },\n  {\n    \"quote\" : \"Tell the truth, or at least don't lie\",\n    \"author\" : \"Jordan Peterson\"\n  },\n  {\n    \"quote\" : \"And this too shall pass\",\n    \"author\" : \"\"\n  },\n  {\n    \"quote\" : \"When things go viral, it’s because they touch upon emotion, not logic. This is actually a big message most people forget’\",\n    \"author\" : \"\"\n  },\n  {\n    \"quote\" : \"Everyone thinks of changing the world, but nobody thinks of changing himself\",\n    \"author\" : \"Leo Tolstoy\"\n  },\n  {\n    \"quote\" : \"Stop saying things that make you feel weak\",\n    \"author\" : \"Jordan Peterson\"\n  },\n  {\n    \"quote\" : \"Act such that if your action became a universal maxim that that would be of universal benefit\",\n    \"author\" : \"Immanuel Kant\"\n  },\n  {\n    \"quote\" : \"If you don’t prioritise your life, someone else will\",\n    \"author\" : \"\"\n  },\n  {\n    \"quote\" : \"Money is coined freedom\",\n    \"author\" : \"Fyodor Dostoevsky\"\n  },\n  {\n    \"quote\" : \"What you are afraid to do is a clear indication of the next thing you need to do\",\n    \"author\" : \"Ralph Waldo Emerson\"\n  },\n  {\n    \"quote\" : \"Humour is a rubber sword - it allows you to make a point without drawing blood.\",\n    \"author\" : \"Mary Hirsh\"\n  },\n  {\n    \"quote\" : \"If you want to tell people the truth, make them laugh, otherwise they'll kill you.\",\n    \"author\" : \"Oscar Wildes\"\n  },\n  {\n    \"quote\" : \"We overestimate what we can do in a month and underestimate what we can do in a year\",\n    \"author\" : \"\"\n  },\n  {\n    \"quote\" : \"Don't be too busy making a living, that you forget to make a life.\",\n    \"author\" : \"\"\n  },\n  {\n    \"quote\" : \"You all laugh at me because I’m different. I laugh at you because you’re all the same.\",\n    \"author\" : \"John Davis\"\n  },\n  {\n    \"quote\" : \"All things excellent are as difficult as they are rare\",\n    \"author\" : \"Spinoza\"\n  },\n  {\n    \"quote\" : \"The worst form of inequality is to try to make unequal things equal\",\n    \"author\" : \"Aristotle\"\n  },\n  {\n    \"quote\" : \"One of the advantages of telling the truth is that you don't have to remember what you said.\",\n    \"author\" : \"Mark Twain\"\n  },\n  {\n    \"quote\" : \"If people can't control their own emotions, then they have to start trying to control other people's behaviour.\",\n    \"author\" : \"John Cleese\"\n  },\n  {\n    \"quote\" : \"Whenever you find yourself on the side of the majority, it is time to pause and reflect\",\n    \"author\" : \"Mark Twain\"\n  },\n  {\n    \"quote\" : \"If you can't explain it simply, you don't understand it well enough\",\n    \"author\" : \"Albert Einstein\"\n  },\n  {\n    \"quote\" : \"Be kind, for everyone you meet is fighting a hard battle\",\n    \"author\" : \"Plato\"\n  },\n  {\n    \"quote\" : \"What the human being is best at doing is interpreting all new information so that their prior conclusions remain intact.\",\n    \"author\" : \"Warren Buffett\"\n  },\n  {\n    \"quote\" : \"Be fearful when others are greedy, and be greedy when others are fearful\",\n    \"author\" : \"Warren Buffett\"\n  },\n  {\n    \"quote\" : \"You can get in way more trouble with a good idea than a bad idea, because you forget that the good idea has limits\",\n    \"author\" : \"Benjamin Graham\"\n  },\n  {\n    \"quote\" : \"One of history's few iron laws is that luxuries tend to become necessities and to spawn new obligations. Once people get used to a certain luxury, they take it for granted. Then they begin to count on it. Finally they reach a point where they can't live without it\",\n    \"author\" : \"Yuval Noah Harari\"\n  },\n  {\n    \"quote\" : \"Praise by name, criticize by category\",\n    \"author\" : \"Warren Buffett\"\n  },\n  {\n    \"quote\" : \"When asked what keeps most individual investors from succeeding, Graham had a concise answer: \\\"The primary cause of failure is that they pay too much attention to what the stock market is doing currently.\\\"\",\n    \"author\" : \"Benjamin Graham\"\n  },\n  {\n    \"quote\" : \"'What is more mortifying than to feel that you have missed the plum for want of courage to shake the tree?'\",\n    \"author\" : \" Logan Pearsall Smith\"\n  }/*,\n  {\n    \"quote\" : \"quote\",\n    \"author\" : \"author\"\n  }*/\n]};   \nexport { jsonData };\n\n","import React, { Component } from 'react';\nimport { Weather } from \"./components/Weather\"\nimport { Clock } from \"./components/Clock\"\nimport './App.css';\nimport { jsonData } from './data/quotes'; // or './module'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {quote: '', quoteAuthor: ''};\n\n    // This binding is necessary to make `this` work in the callback\n    this.updateQuote = this.updateQuote.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateQuote();\n  }\n\n  updateQuote() {\n    //console.log(jsonData.data);\n    var length = jsonData.data.length;\n    var quotes = jsonData.data;\n    \n    /*for (var i = 0; i < length; i++) {\n        var quote = quotes[i];\n        console.log(quote);\n    }*/\n\n    var item = quotes[Math.floor(Math.random()*length)];\n    //console.log(item);\n\n    this.setState({\n      quote: item.quote,\n      quoteAuthor: item.author\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"clock\">\n            <Clock />\n          </div>\n          <div className=\"weather\">\n            <Weather />\n          </div>\n          <p className=\"quote\">\"{this.state.quote}\"</p>\n          <p className=\"author\">{this.state.quoteAuthor}</p>\n        </header>\n      </div>\n    )  \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}